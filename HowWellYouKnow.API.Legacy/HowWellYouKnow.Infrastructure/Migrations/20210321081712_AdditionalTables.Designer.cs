// <auto-generated />
using System;
using HowWellYouKnow.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HowWellYouKnow.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210321081712_AdditionalTables")]
    partial class AdditionalTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("AnswerQuestionVariant", b =>
                {
                    b.Property<Guid>("AnswersId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionVariantsId")
                        .HasColumnType("TEXT");

                    b.HasKey("AnswersId", "QuestionVariantsId");

                    b.HasIndex("QuestionVariantsId");

                    b.ToTable("AnswerQuestionVariant");
                });

            modelBuilder.Entity("GameUser", b =>
                {
                    b.Property<Guid>("JoinedGamesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("JoinedUsersId")
                        .HasColumnType("TEXT");

                    b.HasKey("JoinedGamesId", "JoinedUsersId");

                    b.HasIndex("JoinedUsersId");

                    b.ToTable("GameUser");
                });

            modelBuilder.Entity("GuessQuestionVariant", b =>
                {
                    b.Property<Guid>("GuessesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionVariantsId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuessesId", "QuestionVariantsId");

                    b.HasIndex("QuestionVariantsId");

                    b.ToTable("GuessQuestionVariant");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameStateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("GameStateId")
                        .IsUnique();

                    b.ToTable("Game");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.GameState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentGameState")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameState");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Guess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuessUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GuessUserId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Guess");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MultipleAnswers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.QuestionVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<char>("Notation")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionVariant");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.UserAnswerResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Correct")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnswerResult");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.UserGameScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentScore")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameStateId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameStateId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGameScore");
                });

            modelBuilder.Entity("QuestionVariantUserAnswerResult", b =>
                {
                    b.Property<Guid>("AnswerResultsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionVariantsId")
                        .HasColumnType("TEXT");

                    b.HasKey("AnswerResultsId", "QuestionVariantsId");

                    b.HasIndex("QuestionVariantsId");

                    b.ToTable("QuestionVariantUserAnswerResult");
                });

            modelBuilder.Entity("AnswerQuestionVariant", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Answer", null)
                        .WithMany()
                        .HasForeignKey("AnswersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.QuestionVariant", null)
                        .WithMany()
                        .HasForeignKey("QuestionVariantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameUser", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("JoinedGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("JoinedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GuessQuestionVariant", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Guess", null)
                        .WithMany()
                        .HasForeignKey("GuessesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.QuestionVariant", null)
                        .WithMany()
                        .HasForeignKey("QuestionVariantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Answer", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Game", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.User", "CreatedBy")
                        .WithMany("CreatedGames")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.GameState", "GameState")
                        .WithOne("Game")
                        .HasForeignKey("HowWellYouKnow.Domain.Models.Game", "GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("GameState");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Guess", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.User", "GuessUser")
                        .WithMany("GuessFor")
                        .HasForeignKey("GuessUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.Question", "Question")
                        .WithMany("Guesses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.User", "User")
                        .WithMany("Guesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuessUser");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Question", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Game", "Game")
                        .WithMany("Questions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.QuestionVariant", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Question", "Question")
                        .WithMany("Variants")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.UserAnswerResult", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.Question", "Question")
                        .WithMany("AnswerResults")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.User", "User")
                        .WithMany("AnswerResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.UserGameScore", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.GameState", "GameState")
                        .WithMany("GameScores")
                        .HasForeignKey("GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.User", "User")
                        .WithMany("GameScores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameState");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionVariantUserAnswerResult", b =>
                {
                    b.HasOne("HowWellYouKnow.Domain.Models.UserAnswerResult", null)
                        .WithMany()
                        .HasForeignKey("AnswerResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowWellYouKnow.Domain.Models.QuestionVariant", null)
                        .WithMany()
                        .HasForeignKey("QuestionVariantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Game", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.GameState", b =>
                {
                    b.Navigation("Game");

                    b.Navigation("GameScores");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.Question", b =>
                {
                    b.Navigation("AnswerResults");

                    b.Navigation("Answers");

                    b.Navigation("Guesses");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("HowWellYouKnow.Domain.Models.User", b =>
                {
                    b.Navigation("AnswerResults");

                    b.Navigation("Answers");

                    b.Navigation("CreatedGames");

                    b.Navigation("GameScores");

                    b.Navigation("Guesses");

                    b.Navigation("GuessFor");
                });
#pragma warning restore 612, 618
        }
    }
}
